import { MigrationInterface, QueryRunner } from "typeorm";

export class SetupTables1709329407718 implements MigrationInterface {
    name = 'SetupTables1709329407718'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "icon" ("id" SERIAL NOT NULL, "icon" character varying NOT NULL, "boardColumnsId" integer, CONSTRAINT "PK_7860777a14d73877ab2bf5a341c" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "company" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "name" character varying NOT NULL, "isVerified" boolean NOT NULL DEFAULT false, "imageUrl" character varying, "jobsId" integer, CONSTRAINT "UQ_a76c5cd486f7779bd9c319afd27" UNIQUE ("name"), CONSTRAINT "PK_056f7854a7afdba7cbd6d45fc20" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "job" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "jobTitle" character varying NOT NULL, "description" character varying(750), "postUrl" character varying, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "columnId" integer, CONSTRAINT "PK_98ab1c14ff8d1cf80d18703b92f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "board" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "title" character varying(50) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "PK_865a0f2e22c140d261b1df80eb1" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "board_column" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "label" character varying(50), "order" integer NOT NULL, "boardId" integer, CONSTRAINT "PK_0273ece23af9b3e55ad6af2fdaa" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "icon" ADD CONSTRAINT "FK_8daa62143d0e47d026d0a225e5f" FOREIGN KEY ("boardColumnsId") REFERENCES "board_column"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "company" ADD CONSTRAINT "FK_1c7d363dc6d2982caba1fc5c784" FOREIGN KEY ("jobsId") REFERENCES "job"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "job" ADD CONSTRAINT "FK_b2eb28ff25950ff6879f2002e10" FOREIGN KEY ("columnId") REFERENCES "board_column"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "board_column" ADD CONSTRAINT "FK_7d6b58efcc37a760ffd108eec72" FOREIGN KEY ("boardId") REFERENCES "board"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "board_column" DROP CONSTRAINT "FK_7d6b58efcc37a760ffd108eec72"`);
        await queryRunner.query(`ALTER TABLE "job" DROP CONSTRAINT "FK_b2eb28ff25950ff6879f2002e10"`);
        await queryRunner.query(`ALTER TABLE "company" DROP CONSTRAINT "FK_1c7d363dc6d2982caba1fc5c784"`);
        await queryRunner.query(`ALTER TABLE "icon" DROP CONSTRAINT "FK_8daa62143d0e47d026d0a225e5f"`);
        await queryRunner.query(`DROP TABLE "board_column"`);
        await queryRunner.query(`DROP TABLE "board"`);
        await queryRunner.query(`DROP TABLE "job"`);
        await queryRunner.query(`DROP TABLE "company"`);
        await queryRunner.query(`DROP TABLE "icon"`);
    }

}
